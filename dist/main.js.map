{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/common/control.ts","webpack://my-webpack-project/./src/footer/quote/Quote.ts","webpack://my-webpack-project/./src/footer/Footer.ts","webpack://my-webpack-project/./src/header/weather/weather.ts","webpack://my-webpack-project/./src/main/voiceNotes/Visualizator.ts","webpack://my-webpack-project/./src/header/audioPlayer/audioPlayer.ts","webpack://my-webpack-project/./src/header/header.ts","webpack://my-webpack-project/./src/main/time/time.ts","webpack://my-webpack-project/./src/main/greeting/greeting.ts","webpack://my-webpack-project/./src/main/time/day.ts","webpack://my-webpack-project/./src/main/slider/slider.ts","webpack://my-webpack-project/./src/main/voiceNotes/VoiceModel.ts","webpack://my-webpack-project/./src/main/voiceNotes/VisualMicrofon.ts","webpack://my-webpack-project/./src/main/voiceNotes/MediaRecord.ts","webpack://my-webpack-project/./src/main/voiceNotes/voiceNotes.ts","webpack://my-webpack-project/./src/main/main.ts","webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/App.ts"],"sourcesContent":["class Control<NodeType extends HTMLElement = HTMLElement>{\r\n    public node: NodeType;\r\n\r\n    constructor(parentNode: HTMLElement | null, tagName = 'div', className = '', content = '') {\r\n        const el = document.createElement(tagName);\r\n        el.className = className;\r\n        el.textContent = content;\r\n        if (parentNode) {\r\n            parentNode.append(el);\r\n        }\r\n        this.node = el as NodeType;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.node.remove();\r\n    }\r\n\r\n}\r\n\r\nexport default Control;\r\n","import Control from \"../../common/control\";\r\n\r\nexport default class Quote extends Control{\r\n    private quoteWrapper: Control<HTMLElement>;\r\n    private quote: Control<HTMLElement>;\r\n    private author: Control<HTMLElement>;\r\n    private quoteNumber: number;\r\n    private fetchQuote: (lang: string) => Promise<any>;\r\n    private rotateIconDegr: number;\r\n    private changeQuote: Control<HTMLButtonElement>\r\n    constructor(parentNode:HTMLElement) {\r\n        super(parentNode);\r\n        this.changeQuote = new Control(parentNode, 'button', 'change-quote')\r\n        this.changeQuote.node.style.backgroundImage='url(./public/assets/svg/reload.svg)'\r\n        this.quoteWrapper = new Control(parentNode, 'div')\r\n        this.quote = new Control(this.quoteWrapper.node, 'div', 'quote')\r\n        this.author = new Control(this.quoteWrapper.node, 'div', 'author')\r\n        this.quoteNumber=Math.floor(Math.random()*4)\r\n        this.fetchQuote=(lang:string)=> {\r\n            return fetch(`./public/quotes${lang}.json`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }).then(data => data.json())\r\n        }\r\n        this.getQuote('Ru')\r\n        this.rotateIconDegr=180\r\n        this.changeQuote.node.addEventListener('click',()=>{\r\n            this.changeQuote.node.style.transform=`rotate(${this.rotateIconDegr}deg)`\r\n            this.quoteNumber=this.quoteNumber+1<4?this.quoteNumber+1:0\r\n            this.getQuote('Ru')\r\n            this.rotateIconDegr+=180\r\n        })\r\n    }\r\n    getQuote(lang: string) {\r\n        this.fetchQuote(lang).then(data=>{\r\n            this.quote.node.textContent=data[this.quoteNumber].text\r\n            this.author.node.textContent=data[this.quoteNumber].author\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import Control from \"../common/control\";\r\nimport Quote from \"./quote/Quote\";\r\n\r\nexport class Footer extends Control {\r\n    private footer: Control<HTMLElement>;\r\n    private quote: Control<HTMLElement>;\r\n    private author: Control<HTMLElement>;\r\n    private quoteNumber: number;\r\n    private fetchQuote: (lang: string) => Promise<any>;\r\n    private rotateIconDegr: number;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.footer = new Control(this.node, 'footer', 'footer')\r\n        this.quote= new Quote(this.footer.node)\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\nimport './weather.css'\r\nexport class Weather extends Control {\r\n    private weather: Control<HTMLElement>;\r\n    private input: Control<HTMLInputElement>;\r\n    private icon: Control<HTMLElement>;\r\n    private error: Control<HTMLElement>;\r\n    private description: Control<HTMLElement>;\r\n    private temperature: Control<HTMLElement>;\r\n    private weatherDescription: Control<HTMLElement>;\r\n    private wind: Control<HTMLElement>;\r\n    private humidity: Control<HTMLElement>;\r\n    private defaultCity: string;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.defaultCity = 'St. Petersburg'\r\n        this.weather = new Control(this.node, 'div', 'weather')\r\n        this.input = new Control(this.weather.node, 'input', 'city',)\r\n        this.input.node.setAttribute('value', this.defaultCity)\r\n        this.error = new Control(this.weather.node, 'div', 'weather-error')\r\n        this.icon = new Control(this.weather.node, 'i', 'weather-icon owf')\r\n        this.description = new Control(this.weather.node, 'div', 'description-container')\r\n        this.temperature = new Control(this.weather.node, 'span', 'temperature')\r\n        this.weatherDescription = new Control(this.weather.node, 'span', 'weather-description')\r\n        this.wind = new Control(this.weather.node, 'div', 'wind')\r\n        this.humidity = new Control(this.weather.node, 'div', 'humidity')\r\n        this.input.node.addEventListener('input', (e) => {\r\n            this.weatherData((e.target as HTMLInputElement).value)\r\n        })\r\n        this.weatherData()\r\n    }\r\n\r\n    weatherData(city?: string) {\r\n        this.getWeather(city).then(data => {\r\n            this.temperature.node.textContent = `Temp ${data.main.temp.toFixed(1)}°C`\r\n            this.weatherDescription.node.textContent = data.weather[0].description\r\n            this.wind.node.textContent = `Wind ${data.wind.speed}`\r\n            this.humidity.node.textContent = `Humidity ${data.main.humidity}`\r\n        })\r\n    }\r\n\r\n    async getWeather(city?: string) {\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city ?? 'St. Petersburg'}&lang=ru&appid=a1d7b55bf627b6db7643916254c70535&units=metric`;\r\n        const response = await fetch(url)\r\n        return await response.json()\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\nimport './visualizator.css'\r\n\r\nexport default class Visualizator extends Control {\r\n    public canvas: Control<HTMLCanvasElement>;\r\n    private wrapper: Control<HTMLElement>;\r\n    private audio: Control<HTMLAudioElement>;\r\n    private audioCtx: AudioContext;\r\n    private audioSource: MediaElementAudioSourceNode;\r\n    private analyzer: AnalyserNode;\r\n    private ctx: CanvasRenderingContext2D;\r\n    private parentNode: HTMLElement;\r\n\r\n    constructor(parentNode: HTMLElement, src?: string) {\r\n        super(parentNode);\r\n        this.parentNode=parentNode\r\n        this.audio = new Control(this.node,'audio')\r\n        this.audio.node.src=src\r\n        this.audioCtx = new AudioContext();\r\n        this.wrapper = new Control(this.node, 'div', 'visualizator__wrapper')\r\n        this.canvas = new Control(this.wrapper.node, 'canvas', 'visualizator-canvas')\r\n\r\n        this.ctx = (this.canvas.node as HTMLCanvasElement).getContext('2d'),\r\n            (this.canvas.node as HTMLCanvasElement).width = window.innerWidth/2,\r\n            (this.canvas.node as HTMLCanvasElement).height = window.innerHeight/1.5\r\n        this.audioSource = this.audioCtx.createMediaElementSource(this.audio.node)\r\n        this.analyzer = this.audioCtx.createAnalyser()\r\n        this.audio.node.play()\r\nthis.node.style.transition='all ease 500ms'\r\n        this.audio.node.addEventListener('ended',()=>{\r\n            setTimeout(()=>this.destroy(),1000)\r\n        })\r\n        this.audioSource.connect(this.analyzer)\r\n        this.analyzer.connect(this.audioCtx.destination)\r\n        this.analyzer.fftSize = 256*2\r\n\r\n        const bufferLength = this.analyzer.frequencyBinCount\r\n        const dataArray = new Uint8Array(bufferLength)\r\n\r\n        const barWidth=10\r\n        let barHeight\r\n        let x:number\r\n        const animate=()=>{\r\n            x=0\r\n            this.ctx.clearRect(0,0,(this.canvas.node as HTMLCanvasElement).width\r\n                ,(this.canvas.node as HTMLCanvasElement).height)\r\n            this.analyzer.getByteFrequencyData(dataArray)\r\n            this.drawVisualizer(bufferLength,dataArray,barWidth,x)\r\n\r\n            requestAnimationFrame(animate)\r\n        }\r\n        animate()\r\n    }\r\n    drawVisualizer(bufferLen:number,array:Uint8Array,\r\n                   bWidth:number,x:number){\r\n        for(let i=0;i<=bufferLen;i++){\r\n            const barHeight=array[i]*0.9\r\n            this.ctx.save()\r\n            this.ctx.translate(\r\n                (this.canvas.node as HTMLCanvasElement).width/2,\r\n                (this.canvas.node as HTMLCanvasElement).height/2.7)\r\n            this.ctx.rotate(i*Math.PI*6/bufferLen)\r\n            const hue=i*0.3\r\n            //hsl(285, 100%, 60%)\r\n            this.ctx.fillStyle=`hsl(${hue},100%,${barHeight/3}%)`\r\n            this.ctx.fillRect(0,0,bWidth,barHeight)\r\n            x=x+bWidth\r\n            this.ctx.restore()\r\n        }\r\n    }\r\n    destroy(): void {\r\n        this.audio.node.pause()\r\n\r\n        this.parentNode.removeChild(this.node)\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\nimport './audioPlayer.css'\r\nimport Visualizator from \"../../main/voiceNotes/Visualizator\";\r\n\r\nexport class AudioPlayer extends Control {\r\n    private player: Control<HTMLElement>;\r\n    private playerControls: Control<HTMLElement>;\r\n    private buttonPrev: Control<HTMLButtonElement>;\r\n    private buttonPlay: Control<HTMLButtonElement>;\r\n    private nextButton: Control<HTMLButtonElement>;\r\n    private trackList: Control<HTMLUListElement>;\r\n    private audioList: string[];\r\n    private fetchAudio: (name: string) => Promise<any>;\r\n    private audio: HTMLAudioElement;\r\n    private children: any[];\r\n    private isPlaing: boolean;\r\n    private audioUrl: string;\r\n    private input: Control<HTMLInputElement>;\r\n    private visual: Visualizator | null;\r\n    private parentNode: HTMLElement;\r\n    private inputWrapper: Control<HTMLElement>;\r\n    private inputContent: Control<HTMLElement>;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.parentNode = parentNode\r\n        this.player = new Control(this.node, 'div', 'player')\r\n        this.playerControls = new Control(this.player.node, 'div', 'player-controls')\r\n        this.buttonPrev = new Control(this.playerControls.node, 'button', 'play-prev player-icon')\r\n        this.buttonPrev.node.style.backgroundImage = 'url(./public/assets/svg/play-prev.svg)'\r\n        this.buttonPlay = new Control(this.playerControls.node, 'button', 'play player-icon')\r\n        this.buttonPlay.node.style.backgroundImage = 'url(./public/assets/svg/play.svg)'\r\n        this.inputWrapper=new Control(this.node,'div','input-file-wrapper')\r\n        this.inputContent=new Control(this.inputWrapper.node,'span','','Играть свою...')\r\n        this.input = new Control(this.inputWrapper.node, 'input','input-file')\r\n        this.input.node.setAttribute('type', 'file')\r\n        this.input.node.setAttribute('accept', 'audio/*')\r\n        this.isPlaing = false\r\n        this.audioUrl = ''\r\n        this.input.node.addEventListener('change', (e) => {\r\n            const files = (e.target as HTMLInputElement).files\r\n            const src = URL.createObjectURL(files[0])\r\n            this.audioUrl = src\r\n            this.visualAudio()\r\n        })\r\n        this.visual = null\r\n\r\n        this.buttonPlay.node.addEventListener('click', () => {\r\n            this.visualAudio()\r\n        })\r\n        this.nextButton = new Control(this.playerControls.node, 'button', 'play-next player-icon')\r\n        this.nextButton.node.style.backgroundImage = 'url(./public/assets/svg/play-next.svg)'\r\n        this.trackList = new Control(this.player.node, 'ul', 'play-list')\r\n        // this.audio=new Audio()\r\n        this.audioList = ['Aqua Caelestis', 'Ennio Morricone', 'River Flows In You', 'Summer Wind']\r\n        this.children = []\r\n        this.audioList.forEach(e => {\r\n            const item = new Control(this.trackList.node, 'li', 'track-audio', e)\r\n            this.children.push(item.node)\r\n            item.node.addEventListener('click', (i) => {\r\n                this.children.forEach(e => e.classList.contains('active-track') && e.classList.remove('active-track'))\r\n                item.node.classList.add('active-track')\r\n                this.fetchAudio(e).then((data) => {\r\n                    this.audioUrl = data\r\n                })\r\n            })\r\n        })\r\n        this.fetchAudio = (name: string) => {\r\n            return fetch(`./public/assets/sounds/${name}.mp3`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }).then(data => {\r\n                return data.url\r\n            })\r\n        }\r\n    }\r\n\r\n    visualAudio() {\r\n        this.isPlaing = !this.isPlaing\r\n        if (this.isPlaing) {\r\n            this.visual = new Visualizator(this.parentNode, this.audioUrl)\r\n            this.visual.node.style.transition='all ease 500ms'\r\n        } else {\r\n            console.log(this.parentNode)\r\n            this.visual.node.style.opacity = '0'\r\n           setTimeout(()=>{\r\n               this.visual && this.parentNode.removeChild(this.visual.node)\r\n\r\n           },500)\r\n\r\n        }\r\n\r\n    }\r\n}\r\n","import Control from \"../common/control\";\r\nimport {Weather} from \"./weather/weather\";\r\nimport {AudioPlayer} from \"./audioPlayer/audioPlayer\";\r\nimport './header.css'\r\n\r\nexport class Header extends Control {\r\n    private header: Control<HTMLElement>;\r\n    private player: AudioPlayer;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.header = new Control(this.node, 'header',\r\n            'header')\r\n        this.player = new AudioPlayer(this.header.node)\r\n        this.header = new Weather(this.header.node)\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\nimport './time.css'\r\nexport class Time extends Control {\r\n    private time: Control<HTMLElement>;\r\n    private date: Date;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.time = new Control(this.node, 'time', 'time')\r\n        this.startTimer()\r\n    }\r\n\r\n    startTimer() {\r\n        setInterval(() => {\r\n            this.date = new Date()\r\n            const hour = this.date.getHours()\r\n            const minutes = this.date.getMinutes()\r\n            const seconds = this.date.getSeconds()\r\n            this.time.node.textContent = `${hour < 10 ? '0' + hour : hour}:${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + seconds : seconds}`\r\n        }, 1000)\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\n\r\nexport class Greeting extends Control {\r\n    private greetingWrapper: Control<HTMLElement>;\r\n    private greetingText: Control<HTMLElement>;\r\n    private input: Control<HTMLElement>;\r\n    private defaultName: string;\r\n\r\n    constructor(parentNode: HTMLElement, dayTime: string) {\r\n        super(parentNode);\r\n        this.greetingWrapper = new Control(this.node, 'div',\r\n            'greeting-container')\r\n        this.greetingText = new Control(this.greetingWrapper.node, 'span',\r\n            'greeting', `Good ${dayTime},`)\r\n        const storageName = localStorage.getItem('userName')\r\n        this.defaultName = storageName + '!' ?? '[ Enter name ]'\r\n        this.input = new Control(this.greetingWrapper.node, 'div', 'greeting-name', this.defaultName)\r\n        if (storageName) {\r\n            this.input.node.style.color = '#fff'\r\n        }\r\n        this.input.node.setAttribute('contenteditable', 'true')\r\n        this.input.node.addEventListener('click', () => {\r\n            this.input.node.textContent = storageName ? storageName + '' : ''\r\n            this.input.node.addEventListener('keypress', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.preventDefault()\r\n                    localStorage.setItem('userName', this.input.node.innerText)\r\n                    this.input.node.blur()\r\n                    this.input.node.style.color = '#fff'\r\n                }\r\n            })\r\n\r\n        })\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\n\r\nexport class Day extends Control {\r\n    private date: Control<HTMLElement>;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.date = new Control(this.node, 'date')\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\n\r\nexport class SliderIcons extends Control {\r\n    public buttonPrev: Control<HTMLButtonElement>;\r\n    public buttonNext: Control<HTMLButtonElement>;\r\n    changeImage: (direction: string) => void;\r\n    private container: Control<HTMLElement>;\r\n    private sliderIconsWrapper: Control<HTMLElement>;\r\n    private randomNumber: number;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.sliderIconsWrapper = new Control(this.node, 'div', 'slider-icons')\r\n        this.buttonPrev = new Control(this.sliderIconsWrapper.node, 'button',\r\n            'slide-prev slider-icon')\r\n        this.buttonPrev.node.style.backgroundImage='url(./public/assets/svg/slider-prev.svg)'\r\n        this.buttonNext = new Control(this.sliderIconsWrapper.node, 'button', 'slide-next slider-icon')\r\n        this.buttonNext.node.style.backgroundImage='url(./public/assets/svg/slider-next.svg)'\r\n\r\n    }\r\n}\r\n","type IAudioData = any[]\r\n\r\nexport class VoiceModel {\r\n    //  onUpdateTodoList: Signal<ITaskListData> = new Signal()\r\n    constructor() {\r\n        this._audioNotes = []\r\n    }\r\n\r\n    private _audioNotes: IAudioData;\r\n\r\n    get audioNotes() {\r\n        return this._audioNotes\r\n    }\r\n\r\n    set audioNotes(notesList) {\r\n        this._audioNotes = notesList\r\n        // this.onUpdateTodoList.emit(this.todoList)\r\n    }\r\n\r\n    create(props: any)  {\r\n        return fetch(`https://moment-server-notes.herokuapp.com/voice_notes/create?id=${props.id}`,{\r\n\r\n            method:\"POST\",\r\n            headers:{\r\n                //'Access-Control-Allow-Origin': '*',\r\n                //'Access-Control-Allow-Credentials': 'true',\r\n                //'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',\r\n             //   'Access-Control-Allow-Headers': 'Origin,Methods,Credentials,X-PINGOTHER, Content-Type',\r\n                },\r\n         //   mode: 'no-cors',\r\n            body:props.voice\r\n        })\r\n            .then(response => {\r\n                console.log(response)\r\n                response.json()\r\n            })\r\n            .then((data: any) => {\r\n               // return this.list()\r\n                return props.id\r\n            })\r\n    }\r\n\r\n    delete(props: any) {\r\n        return fetch(` https://moment-server-notes.herokuapp.com/voice_notes/delete?id=${props}`)\r\n            .then(response => response.json())\r\n            .then((data: any) => {\r\n               // return this.list()\r\n                return props\r\n            })\r\n    }\r\n\r\n    list() {\r\n        return fetch('https://moment-server-notes.herokuapp.com/voice_notes/list',{\r\n            method:\"POST\",\r\n            headers:{\r\n                //'Access-Control-Allow-Origin': '*',\r\n                //'Access-Control-Allow-Credentials': 'true',\r\n                //'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',\r\n                //'Access-Control-Allow-Headers': 'Origin,X-PINGOTHER, Content-Type',\r\n                },\r\n           // mode: 'no-cors',\r\n        })\r\n            .then(response => response.json())\r\n            .then((data: any) => {\r\n                this._audioNotes = data\r\n                return data\r\n            })\r\n    }\r\n\r\n    getFileById(id:number){\r\n\r\n        return fetch(` https://moment-server-notes.herokuapp.com/voice_notes/item?id=${id}`)\r\n            .then(response => response.json())\r\n            .then((data: any) => {\r\n                //this._audioNotes = data\r\n                return data\r\n            })\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\n\r\n\r\nexport default class VizualMicrofon extends Control {\r\n    public canvas: Control<HTMLCanvasElement>;\r\n    private canvasCtx: CanvasRenderingContext2D;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.canvas = new Control(parentNode, 'canvas','microfon-canvas');\r\n        this.canvasCtx = (this.canvas.node as HTMLCanvasElement).getContext(\"2d\");\r\n        this.canvas.node.width = window.innerWidth\r\n        this.canvas.node.height = 200\r\n        let once = false;\r\n\r\n        if (!once) {\r\n            once = true\r\n        } else {\r\n            return\r\n        }\r\n        // @ts-ignore\r\n        var audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n        var analyser = audioCtx.createAnalyser();\r\n\r\n        var mDev;\r\n        var mss;\r\n\r\n\r\n        navigator.mediaDevices.getUserMedia({audio: true}).then(md => {\r\n            mDev = md;\r\n            mss = audioCtx.createMediaStreamSource(mDev);\r\n            mss.connect(analyser)\r\n        });\r\n\r\n\r\n// ...\r\n\r\n        analyser.fftSize = 2048;\r\n        var bufferLength = analyser.frequencyBinCount;\r\n        var dataArray = new Uint8Array(bufferLength);\r\n\r\n        analyser.getByteTimeDomainData(dataArray);\r\n\r\n// Get a canvas defined with ID \"oscilloscope\"\r\n        // var canvas = document.getElementById(\"oscilloscope\");\r\n        // var canvasCtx = (this.canvas.node as HTMLCanvasElement).getContext(\"2d\");\r\n\r\n\r\n// draw an oscilloscope of the current audio source\r\n\r\n        const draw = () => {\r\n\r\n            requestAnimationFrame(draw);\r\n\r\n            analyser.getByteTimeDomainData(dataArray);\r\n            this.canvasCtx.clearRect(0,0,(this.canvas.node as HTMLCanvasElement).width\r\n                ,(this.canvas.node as HTMLCanvasElement).height)\r\n            this.canvasCtx.fillStyle = \"rgba(200, 200, 200,0)\";\r\n            this.canvasCtx.fillRect(0, 0, this.canvas.node.width, this.canvas.node.height);\r\n\r\n            this.canvasCtx.lineWidth = 4;\r\n            this.canvasCtx.strokeStyle = \"rgba(255, 255, 255,0.5)\";\r\n\r\n            this.canvasCtx.beginPath();\r\n\r\n            var sliceWidth = this.canvas.node.width * 1.0 / bufferLength;\r\n            var x = 0;\r\n\r\n            for (var i = 0; i < bufferLength; i++) {\r\n\r\n                var v = dataArray[i] / 128.0;\r\n                var y = v * this.canvas.node.height / 2;\r\n\r\n                if (i === 0) {\r\n                    this.canvasCtx.moveTo(x, y);\r\n                } else {\r\n                    this.canvasCtx.lineTo(x, y);\r\n                }\r\n\r\n                x += sliceWidth;\r\n            }\r\n\r\n            this.canvasCtx.lineTo(this.canvas.node.width, this.canvas.node.height / 2);\r\n            this.canvasCtx.stroke();\r\n        }\r\n        draw();\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\nimport VizualMicrofon from \"./VisualMicrofon\";\r\ninterface IRecData {\r\n    id: number;\r\n    voice: string | ArrayBuffer\r\n}\r\nfunction blobToBase64(blob: Blob) {\r\n    return new Promise<string | ArrayBuffer>((resolve, _) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result);\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}\r\nexport class MediaRecord extends Control {\r\n    public onStop: (result: IRecData) => void\r\n    private stopRecord: Control<HTMLInputElement>;\r\n    private startRecord: Control<HTMLElement>;\r\n    private wrapper: Control<HTMLElement>;\r\n    private visualMicro: VizualMicrofon;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.wrapper = new Control(this.node, 'div', 'media-wrapper')\r\n        this.startRecord = new Control(this.wrapper.node, 'button', 'media-start', 'Сделать заметку')\r\n        this.stopRecord = new Control(this.wrapper.node, 'button', 'media-stop', 'Готово')\r\n        this.visualMicro,\r\n\r\n            navigator.mediaDevices.getUserMedia({audio: true})\r\n                .then(stream => {\r\n                    const mediaRecorder = new MediaRecorder(stream)\r\n                    let visualMicro:VizualMicrofon\r\n                    let voiceNotes: any[] = []\r\n                    this.startRecord.node.addEventListener('click', () => {\r\n                        console.log('start')\r\n                        voiceNotes = []\r\n                        mediaRecorder.start()\r\n                        console.log(mediaRecorder)\r\n                        visualMicro= new VizualMicrofon(parentNode)\r\n                    })\r\n                    this.stopRecord.node.addEventListener('click', () => {\r\n                        console.log('stop')\r\n                        mediaRecorder.stop()\r\n                        visualMicro.canvas.destroy()\r\n                    })\r\n                    mediaRecorder.addEventListener(\"dataavailable\", (event) => {\r\n                        voiceNotes.push(event.data);\r\n                    });\r\n                    mediaRecorder.addEventListener(\"stop\", async () => {\r\n                        const voiceBlob = new Blob(voiceNotes, {\r\n                            type: 'audio/wav'\r\n                        });\r\n                        const str64 = await blobToBase64(voiceBlob) as string\r\n                        this.onStop({id: +new Date(), voice: str64})\r\n                    })\r\n                })\r\n    }\r\n}\r\n","import Control from \"../../common/control\";\r\nimport {VoiceModel} from \"./VoiceModel\";\r\nimport {MediaRecord} from \"./MediaRecord\";\r\nimport VizualMicrofon from \"./VisualMicrofon\";\r\nimport Visualizator from \"./Visualizator\";\r\nimport './voiceNotes.css'\r\n\r\ninterface IAudioItems {\r\n    indx: string,\r\n    element: Control<HTMLElement>\r\n}\r\n\r\ninterface IRecData {\r\n    id: number;\r\n    voice: string | ArrayBuffer\r\n}\r\n\r\nexport default class VoiceNotes extends Control {\r\n\r\n    private model: VoiceModel;\r\n    private audiosWrapper: Control<HTMLElement>;\r\n    private mediaRecord: MediaRecord;\r\n    private uploadedIds: number[];\r\n    private audioItemsArr: IAudioItems[];\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.model = new VoiceModel()\r\n        this.mediaRecord = new MediaRecord(this.node)\r\n\r\n        this.mediaRecord.onStop = (data) => {\r\n            this.audioStopHandler(data)\r\n        }\r\n        this.uploadedIds = []\r\n        this.audioItemsArr = []\r\n        this.audiosWrapper = new Control(this.node, 'div', 'audioWrapper')\r\n    }\r\n    async audioStopHandler(data: IRecData) {\r\n        const newAudioId = await this.model.create(data)\r\n        this.createAudioElement(newAudioId)\r\n    }\r\n    animateOut(element: Control<HTMLElement>) {\r\n        return new Promise((resolve) => {\r\n            element.node.classList.add('audioItem__hidden')\r\n            element.node.addEventListener('transitionend', () =>{\r\n             //   element.destroy()\r\n            })\r\n            resolve(null)\r\n        })\r\n    }\r\n\r\n    createAudioElement(id: string) {\r\n        const audioItem = new Control(this.audiosWrapper.node, 'div', 'audioItem__wrapper audioItem__hidden')\r\n        this.audioItemsArr.push({indx: id, element: audioItem})\r\n        const buttonPlay = new Control(audioItem.node, 'button', 'audioItem__button', 'play')\r\n        const buttonDelete = new Control(audioItem.node, 'button', 'deleteItem__button', 'X')\r\n        buttonDelete.node.setAttribute('data-index', id)\r\n        buttonPlay.node.setAttribute('data-index', id)\r\n        buttonPlay.node.addEventListener('click', async (e) => {\r\n            const ind = +(e.target as HTMLElement).dataset.index\r\n            const audioTrack = await this.model.getFileById(ind)\r\n            new Visualizator(this.node, audioTrack.voice)\r\n            const d = await this.model.list()\r\n        })\r\n        buttonDelete.node.addEventListener('click', async (e) => {\r\n            const ind = +(e.target as HTMLElement).dataset.index\r\n            const deletedTrack = await this.model.delete(ind)\r\n            this.audioItemsArr.splice(this.uploadedIds.indexOf(deletedTrack), 1)\r\n            await this.animateOut(audioItem)\r\n            audioItem.destroy()\r\n        })\r\n        setTimeout(() => {\r\n            audioItem.node.classList.remove('audioItem__hidden')\r\n        }, 500)\r\n    }\r\n\r\n    drawAudios(array: string[]) {\r\n        this.audiosWrapper.node.innerHTML = ''\r\n        array.forEach((aud: string) => {\r\n            this.createAudioElement(aud)\r\n        })\r\n    }\r\n\r\n}\r\n","import Control from \"../common/control\";\r\nimport {Time} from \"./time/time\";\r\nimport {Greeting} from \"./greeting/greeting\";\r\nimport {Day} from \"./time/day\";\r\nimport {SliderIcons} from \"./slider/slider\";\r\nimport VoiceNotes from \"./voiceNotes/voiceNotes\";\r\nimport './main.css'\r\nexport class Main extends Control  {\r\n    changeImage: (direction: string) => void;\r\n    private sliderIcons: SliderIcons\r\n    private time: Time;\r\n    private day: Day;\r\n    private greeting: Greeting;\r\n    private main: Control<HTMLElement>;\r\n    private randomNumber: number;\r\n    private voiceNotes: VoiceNotes;\r\n\r\n\r\n    constructor(parentNode: HTMLElement, dayTime: string) {\r\n        super(parentNode);\r\n        this.main = new Control(this.node, 'main', 'main')\r\n        this.sliderIcons = new SliderIcons(this.main.node)\r\n\r\n        this.sliderIcons.buttonNext.node.onclick = () => this.changeImage('next')\r\n        this.sliderIcons.buttonPrev.node.onclick = () => this.changeImage('prev')\r\n        this.time = new Time(this.main.node)\r\n        this.day = new Day(this.main.node)\r\n        this.greeting = new Greeting(this.main.node, dayTime)\r\n        // this.sliderIcons.buttonNext.node.dispatchEvent(new Event('click'))\r\n        this.voiceNotes= new VoiceNotes(this.main.node)\r\n    }\r\n}\r\n","import {App} from \"./App\";\nimport './styles.css'\nconst app =new App(document.body)\n\nconsole.log(new Date())\n","import Control from \"./common/control\";\r\nimport {Footer} from \"./footer/Footer\";\r\nimport {Header} from \"./header/header\";\r\nimport {Main} from \"./main/main\";\r\n\r\nexport class App extends Control {\r\n    public getDayTime: () => string;\r\n    private main: Main;\r\n    private header: Header;\r\n    private footer: Footer;\r\n    private currentNumber: number;\r\n\r\n    constructor(parentNode: HTMLElement) {\r\n        super(parentNode);\r\n        this.getDayTime = () => {\r\n            const hours = new Date().getHours()\r\n            return hours < 6 ? 'night' : hours < 12 ? 'morning' : hours < 18 ? 'day' : 'evening'\r\n        }\r\n        this.header = new Header(this.node)\r\n        this.main = new Main(this.node, this.getDayTime())\r\n        this.footer = new Footer(this.node)\r\n        this.currentNumber = Math.floor(Math.random() * 20)\r\n        this.main.changeImage = (direction: string) => {\r\n            if (direction === 'next') {\r\n                if (this.currentNumber + 1 > 20) {\r\n                    this.currentNumber = 1\r\n                } else {\r\n                    this.currentNumber += 1\r\n                }\r\n            } else {\r\n                if (this.currentNumber - 1 <= 0) {\r\n                    this.currentNumber = 20\r\n                } else {\r\n                    this.currentNumber -= 1\r\n                }\r\n\r\n            }\r\n            let img = new Image();\r\n            img.addEventListener('load', () => parentNode.style.backgroundImage = `url(${img.src})`)\r\n            img.src = `https://raw.githubusercontent.com/poli8512/stage1-tasks/assets/images/${this.getDayTime()}/${this.currentNumber >= 10\r\n                ? this.currentNumber : '0' + this.currentNumber}.jpg`\r\n        }\r\n    }\r\n}\r\n"],"names":["parentNode","tagName","className","content","el","document","createElement","textContent","append","this","node","destroy","remove","changeQuote","style","backgroundImage","quoteWrapper","quote","author","quoteNumber","Math","floor","random","fetchQuote","lang","fetch","headers","then","data","json","getQuote","rotateIconDegr","addEventListener","transform","text","footer","defaultCity","weather","input","setAttribute","error","icon","description","temperature","weatherDescription","wind","humidity","e","weatherData","target","value","city","getWeather","main","temp","toFixed","speed","src","audio","audioCtx","AudioContext","wrapper","canvas","ctx","getContext","width","window","innerWidth","height","innerHeight","audioSource","createMediaElementSource","analyzer","createAnalyser","play","transition","setTimeout","connect","destination","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","animate","clearRect","getByteFrequencyData","drawVisualizer","requestAnimationFrame","bufferLen","array","bWidth","x","i","barHeight","save","translate","rotate","PI","hue","fillStyle","fillRect","restore","pause","removeChild","player","playerControls","buttonPrev","buttonPlay","inputWrapper","inputContent","isPlaing","audioUrl","files","URL","createObjectURL","visualAudio","visual","nextButton","trackList","audioList","children","forEach","item","push","classList","contains","add","fetchAudio","name","url","console","log","opacity","header","AudioPlayer","Weather","time","startTimer","setInterval","date","Date","hour","getHours","minutes","getMinutes","seconds","getSeconds","dayTime","greetingWrapper","greetingText","storageName","localStorage","getItem","defaultName","color","key","preventDefault","setItem","innerText","blur","sliderIconsWrapper","buttonNext","_audioNotes","notesList","create","props","id","method","body","voice","response","delete","list","getFileById","canvasCtx","once","mDev","webkitAudioContext","analyser","navigator","mediaDevices","getUserMedia","md","createMediaStreamSource","getByteTimeDomainData","draw","lineWidth","strokeStyle","beginPath","sliceWidth","y","moveTo","lineTo","stroke","startRecord","stopRecord","visualMicro","stream","mediaRecorder","MediaRecorder","voiceNotes","start","stop","event","voiceBlob","Blob","type","blob","Promise","resolve","_","reader","FileReader","onloadend","result","readAsDataURL","str64","onStop","model","VoiceModel","mediaRecord","MediaRecord","audioStopHandler","uploadedIds","audioItemsArr","audiosWrapper","newAudioId","createAudioElement","animateOut","element","audioItem","indx","buttonDelete","ind","dataset","index","audioTrack","deletedTrack","splice","indexOf","drawAudios","innerHTML","aud","sliderIcons","SliderIcons","onclick","changeImage","Time","day","Day","greeting","Greeting","getDayTime","hours","Header","Main","Footer","currentNumber","direction","img","Image"],"sourceRoot":""}